# Generated from /home/eugene/workspace/Code/PyProjects/code_gen/gmar.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64")
        buf.write("\u0156\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%")
        buf.write("\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(")
        buf.write("\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3")
        buf.write(",\3,\3,\3,\7,\u011e\n,\f,\16,\u0121\13,\3,\3,\3-\3-\3")
        buf.write("-\3-\7-\u0129\n-\f-\16-\u012c\13-\3-\3-\3-\3-\3-\3.\6")
        buf.write(".\u0134\n.\r.\16.\u0135\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/")
        buf.write("\u0141\n/\3\60\3\60\3\60\3\60\3\61\3\61\3\62\3\62\7\62")
        buf.write("\u014b\n\62\f\62\16\62\u014e\13\62\3\63\6\63\u0151\n\63")
        buf.write("\r\63\16\63\u0152\3\63\3\63\3\u012a\2\64\3\3\5\4\7\5\t")
        buf.write("\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\63e\64\3\2\6\4\2\f\f\17\17\4\2C\\c|\6\2\62;")
        buf.write("C\\aac|\5\2\13\f\17\17\"\"\2\u015b\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2")
        buf.write("\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3")
        buf.write("\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a")
        buf.write("\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\3g\3\2\2\2\5m\3\2\2\2\7")
        buf.write("o\3\2\2\2\tq\3\2\2\2\13x\3\2\2\2\r\177\3\2\2\2\17\u0084")
        buf.write("\3\2\2\2\21\u0089\3\2\2\2\23\u008b\3\2\2\2\25\u0092\3")
        buf.write("\2\2\2\27\u0094\3\2\2\2\31\u0096\3\2\2\2\33\u0098\3\2")
        buf.write("\2\2\35\u009e\3\2\2\2\37\u00a1\3\2\2\2!\u00a4\3\2\2\2")
        buf.write("#\u00a9\3\2\2\2%\u00ab\3\2\2\2\'\u00be\3\2\2\2)\u00c4")
        buf.write("\3\2\2\2+\u00cd\3\2\2\2-\u00d4\3\2\2\2/\u00d6\3\2\2\2")
        buf.write("\61\u00d9\3\2\2\2\63\u00dc\3\2\2\2\65\u00df\3\2\2\2\67")
        buf.write("\u00e2\3\2\2\29\u00e4\3\2\2\2;\u00e6\3\2\2\2=\u00e9\3")
        buf.write("\2\2\2?\u00ec\3\2\2\2A\u00ee\3\2\2\2C\u00f0\3\2\2\2E\u00f2")
        buf.write("\3\2\2\2G\u00f4\3\2\2\2I\u00f6\3\2\2\2K\u00f8\3\2\2\2")
        buf.write("M\u00ff\3\2\2\2O\u0104\3\2\2\2Q\u0108\3\2\2\2S\u010c\3")
        buf.write("\2\2\2U\u0111\3\2\2\2W\u0119\3\2\2\2Y\u0124\3\2\2\2[\u0133")
        buf.write("\3\2\2\2]\u0140\3\2\2\2_\u0142\3\2\2\2a\u0146\3\2\2\2")
        buf.write("c\u0148\3\2\2\2e\u0150\3\2\2\2gh\7e\2\2hi\7n\2\2ij\7c")
        buf.write("\2\2jk\7u\2\2kl\7u\2\2l\4\3\2\2\2mn\7}\2\2n\6\3\2\2\2")
        buf.write("op\7\177\2\2p\b\3\2\2\2qr\7r\2\2rs\7w\2\2st\7d\2\2tu\7")
        buf.write("n\2\2uv\7k\2\2vw\7e\2\2w\n\3\2\2\2xy\7u\2\2yz\7v\2\2z")
        buf.write("{\7c\2\2{|\7v\2\2|}\7k\2\2}~\7e\2\2~\f\3\2\2\2\177\u0080")
        buf.write("\7x\2\2\u0080\u0081\7q\2\2\u0081\u0082\7k\2\2\u0082\u0083")
        buf.write("\7f\2\2\u0083\16\3\2\2\2\u0084\u0085\7o\2\2\u0085\u0086")
        buf.write("\7c\2\2\u0086\u0087\7k\2\2\u0087\u0088\7p\2\2\u0088\20")
        buf.write("\3\2\2\2\u0089\u008a\7*\2\2\u008a\22\3\2\2\2\u008b\u008c")
        buf.write("\7U\2\2\u008c\u008d\7v\2\2\u008d\u008e\7t\2\2\u008e\u008f")
        buf.write("\7k\2\2\u008f\u0090\7p\2\2\u0090\u0091\7i\2\2\u0091\24")
        buf.write("\3\2\2\2\u0092\u0093\7]\2\2\u0093\26\3\2\2\2\u0094\u0095")
        buf.write("\7_\2\2\u0095\30\3\2\2\2\u0096\u0097\7+\2\2\u0097\32\3")
        buf.write("\2\2\2\u0098\u0099\7y\2\2\u0099\u009a\7j\2\2\u009a\u009b")
        buf.write("\7k\2\2\u009b\u009c\7n\2\2\u009c\u009d\7g\2\2\u009d\34")
        buf.write("\3\2\2\2\u009e\u009f\7f\2\2\u009f\u00a0\7q\2\2\u00a0\36")
        buf.write("\3\2\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3\7h\2\2\u00a3 ")
        buf.write("\3\2\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7")
        buf.write("\7u\2\2\u00a7\u00a8\7g\2\2\u00a8\"\3\2\2\2\u00a9\u00aa")
        buf.write("\7?\2\2\u00aa$\3\2\2\2\u00ab\u00ac\7U\2\2\u00ac\u00ad")
        buf.write("\7{\2\2\u00ad\u00ae\7u\2\2\u00ae\u00af\7v\2\2\u00af\u00b0")
        buf.write("\7g\2\2\u00b0\u00b1\7o\2\2\u00b1\u00b2\7\60\2\2\u00b2")
        buf.write("\u00b3\7q\2\2\u00b3\u00b4\7w\2\2\u00b4\u00b5\7v\2\2\u00b5")
        buf.write("\u00b6\7\60\2\2\u00b6\u00b7\7r\2\2\u00b7\u00b8\7t\2\2")
        buf.write("\u00b8\u00b9\7k\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb\7v")
        buf.write("\2\2\u00bb\u00bc\7n\2\2\u00bc\u00bd\7p\2\2\u00bd&\3\2")
        buf.write("\2\2\u00be\u00bf\7d\2\2\u00bf\u00c0\7t\2\2\u00c0\u00c1")
        buf.write("\7g\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3\7m\2\2\u00c3(\3")
        buf.write("\2\2\2\u00c4\u00c5\7e\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7")
        buf.write("\7p\2\2\u00c7\u00c8\7v\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca")
        buf.write("\7p\2\2\u00ca\u00cb\7w\2\2\u00cb\u00cc\7g\2\2\u00cc*\3")
        buf.write("\2\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0")
        buf.write("\7v\2\2\u00d0\u00d1\7w\2\2\u00d1\u00d2\7t\2\2\u00d2\u00d3")
        buf.write("\7p\2\2\u00d3,\3\2\2\2\u00d4\u00d5\7.\2\2\u00d5.\3\2\2")
        buf.write("\2\u00d6\u00d7\7~\2\2\u00d7\u00d8\7~\2\2\u00d8\60\3\2")
        buf.write("\2\2\u00d9\u00da\7(\2\2\u00da\u00db\7(\2\2\u00db\62\3")
        buf.write("\2\2\2\u00dc\u00dd\7?\2\2\u00dd\u00de\7?\2\2\u00de\64")
        buf.write("\3\2\2\2\u00df\u00e0\7#\2\2\u00e0\u00e1\7?\2\2\u00e1\66")
        buf.write("\3\2\2\2\u00e2\u00e3\7>\2\2\u00e38\3\2\2\2\u00e4\u00e5")
        buf.write("\7@\2\2\u00e5:\3\2\2\2\u00e6\u00e7\7>\2\2\u00e7\u00e8")
        buf.write("\7?\2\2\u00e8<\3\2\2\2\u00e9\u00ea\7@\2\2\u00ea\u00eb")
        buf.write("\7?\2\2\u00eb>\3\2\2\2\u00ec\u00ed\7-\2\2\u00ed@\3\2\2")
        buf.write("\2\u00ee\u00ef\7/\2\2\u00efB\3\2\2\2\u00f0\u00f1\7,\2")
        buf.write("\2\u00f1D\3\2\2\2\u00f2\u00f3\7\61\2\2\u00f3F\3\2\2\2")
        buf.write("\u00f4\u00f5\7#\2\2\u00f5H\3\2\2\2\u00f6\u00f7\7\60\2")
        buf.write("\2\u00f7J\3\2\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa\7g\2")
        buf.write("\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7i\2\2\u00fc\u00fd\7")
        buf.write("v\2\2\u00fd\u00fe\7j\2\2\u00feL\3\2\2\2\u00ff\u0100\7")
        buf.write("v\2\2\u0100\u0101\7j\2\2\u0101\u0102\7k\2\2\u0102\u0103")
        buf.write("\7u\2\2\u0103N\3\2\2\2\u0104\u0105\7p\2\2\u0105\u0106")
        buf.write("\7g\2\2\u0106\u0107\7y\2\2\u0107P\3\2\2\2\u0108\u0109")
        buf.write("\7k\2\2\u0109\u010a\7p\2\2\u010a\u010b\7v\2\2\u010bR\3")
        buf.write("\2\2\2\u010c\u010d\7e\2\2\u010d\u010e\7j\2\2\u010e\u010f")
        buf.write("\7c\2\2\u010f\u0110\7t\2\2\u0110T\3\2\2\2\u0111\u0112")
        buf.write("\7d\2\2\u0112\u0113\7q\2\2\u0113\u0114\7q\2\2\u0114\u0115")
        buf.write("\7n\2\2\u0115\u0116\7g\2\2\u0116\u0117\7c\2\2\u0117\u0118")
        buf.write("\7p\2\2\u0118V\3\2\2\2\u0119\u011a\7\61\2\2\u011a\u011b")
        buf.write("\7\61\2\2\u011b\u011f\3\2\2\2\u011c\u011e\n\2\2\2\u011d")
        buf.write("\u011c\3\2\2\2\u011e\u0121\3\2\2\2\u011f\u011d\3\2\2\2")
        buf.write("\u011f\u0120\3\2\2\2\u0120\u0122\3\2\2\2\u0121\u011f\3")
        buf.write("\2\2\2\u0122\u0123\b,\2\2\u0123X\3\2\2\2\u0124\u0125\7")
        buf.write("\61\2\2\u0125\u0126\7,\2\2\u0126\u012a\3\2\2\2\u0127\u0129")
        buf.write("\13\2\2\2\u0128\u0127\3\2\2\2\u0129\u012c\3\2\2\2\u012a")
        buf.write("\u012b\3\2\2\2\u012a\u0128\3\2\2\2\u012b\u012d\3\2\2\2")
        buf.write("\u012c\u012a\3\2\2\2\u012d\u012e\7,\2\2\u012e\u012f\7")
        buf.write("\61\2\2\u012f\u0130\3\2\2\2\u0130\u0131\b-\2\2\u0131Z")
        buf.write("\3\2\2\2\u0132\u0134\4\62;\2\u0133\u0132\3\2\2\2\u0134")
        buf.write("\u0135\3\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2\2")
        buf.write("\u0136\\\3\2\2\2\u0137\u0138\7v\2\2\u0138\u0139\7t\2\2")
        buf.write("\u0139\u013a\7w\2\2\u013a\u0141\7g\2\2\u013b\u013c\7h")
        buf.write("\2\2\u013c\u013d\7c\2\2\u013d\u013e\7n\2\2\u013e\u013f")
        buf.write("\7u\2\2\u013f\u0141\7g\2\2\u0140\u0137\3\2\2\2\u0140\u013b")
        buf.write("\3\2\2\2\u0141^\3\2\2\2\u0142\u0143\7)\2\2\u0143\u0144")
        buf.write("\13\2\2\2\u0144\u0145\7)\2\2\u0145`\3\2\2\2\u0146\u0147")
        buf.write("\7=\2\2\u0147b\3\2\2\2\u0148\u014c\t\3\2\2\u0149\u014b")
        buf.write("\t\4\2\2\u014a\u0149\3\2\2\2\u014b\u014e\3\2\2\2\u014c")
        buf.write("\u014a\3\2\2\2\u014c\u014d\3\2\2\2\u014dd\3\2\2\2\u014e")
        buf.write("\u014c\3\2\2\2\u014f\u0151\t\5\2\2\u0150\u014f\3\2\2\2")
        buf.write("\u0151\u0152\3\2\2\2\u0152\u0150\3\2\2\2\u0152\u0153\3")
        buf.write("\2\2\2\u0153\u0154\3\2\2\2\u0154\u0155\b\63\2\2\u0155")
        buf.write("f\3\2\2\2\t\2\u011f\u012a\u0135\u0140\u014c\u0152\3\b")
        buf.write("\2\2")
        return buf.getvalue()


class gmarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    LINE_COMMENT = 43
    COMMENT = 44
    INTEGER = 45
    BOOLEAN = 46
    CHAR = 47
    SEMICOLON = 48
    IDENTIFIER = 49
    WS = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'{'", "'}'", "'public'", "'static'", "'void'", "'main'", 
            "'('", "'String'", "'['", "']'", "')'", "'while'", "'do'", "'if'", 
            "'else'", "'='", "'System.out.println'", "'break'", "'continue'", 
            "'return'", "','", "'||'", "'&&'", "'=='", "'!='", "'<'", "'>'", 
            "'<='", "'>='", "'+'", "'-'", "'*'", "'/'", "'!'", "'.'", "'length'", 
            "'this'", "'new'", "'int'", "'char'", "'boolean'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "LINE_COMMENT", "COMMENT", "INTEGER", "BOOLEAN", "CHAR", "SEMICOLON", 
            "IDENTIFIER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "LINE_COMMENT", "COMMENT", 
                  "INTEGER", "BOOLEAN", "CHAR", "SEMICOLON", "IDENTIFIER", 
                  "WS" ]

    grammarFileName = "gmar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


